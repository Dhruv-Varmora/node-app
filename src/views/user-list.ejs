<div class="row">
    <div class="col-12">
        <h2 class="mb-4">User List</h2>
        
        <!-- Users Table -->
        <div class="card">
            <div class="card-header d-flex justify-content-between align-items-center">
                <h5 class="mb-0">All Users</h5>
                <div class="btn-group" role="group">
                    <a href="/users/assign-task" class="btn btn-success btn-sm">
                        <i class="bi bi-plus-circle"></i> Assign Task
                    </a>
                    <button class="btn btn-primary btn-sm" onclick="loadUsers()">
                        <i class="bi bi-arrow-clockwise"></i> Refresh
                    </button>
                </div>
            </div>
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table table-striped table-hover">
                        <thead class="table-dark">
                            <tr>
                                <th>ID</th>
                                <th>Name</th>
                                <th>Email</th>
                                <th>Role</th>
                                <th>Created Date</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody id="usersTable">
                            <tr>
                                <td colspan="6" class="text-center">
                                    <div class="spinner-border text-primary" role="status">
                                        <span class="visually-hidden">Loading...</span>
                                    </div>
                                    <p class="mt-2">Loading users...</p>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>

        <!-- User Details Modal -->
        <div class="modal fade" id="userDetailsModal" tabindex="-1">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">User Details</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                    </div>
                    <div class="modal-body" id="userDetailsContent">
                        <!-- User details will be loaded here -->
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
// Load users when page loads
document.addEventListener('DOMContentLoaded', function() {
    loadUsers();
});

// Load users from API
async function loadUsers() {
    try {
        const response = await fetch('/api/users');
        if (!response.ok) {
            throw new Error('Failed to fetch users');
        }
        const users = await response.json();
        displayUsers(users);
    } catch (error) {
        console.error('Error loading users:', error);
        document.getElementById('usersTable').innerHTML = `
            <tr>
                <td colspan="6" class="text-center text-danger">
                    <i class="bi bi-exclamation-triangle"></i>
                    Error loading users: ${error.message}
                </td>
            </tr>
        `;
    }
}

// Display users in table
function displayUsers(users) {
    const tbody = document.getElementById('usersTable');
    
    if (users.length === 0) {
        tbody.innerHTML = `
            <tr>
                <td colspan="6" class="text-center text-muted">
                    <i class="bi bi-person-x"></i>
                    No users found
                </td>
            </tr>
        `;
        return;
    }
    
    tbody.innerHTML = '';
    
    users.forEach(user => {
        const row = document.createElement('tr');
        row.innerHTML = `
            <td>${user.id}</td>
            <td>
                <strong>${user.name}</strong>
            </td>
            <td>
                <a href="mailto:${user.email}" class="text-decoration-none">
                    ${user.email}
                </a>
            </td>
            <td>
                <span class="badge bg-${getRoleColor(user.role)} fs-6">
                    ${user.role.toUpperCase()}
                </span>
            </td>
            <td>
                <small class="text-muted">
                    ${formatDate(user.created_at)}
                </small>
            </td>
            <td>
                <div class="btn-group btn-group-sm" role="group">
                    <button class="btn btn-outline-info" onclick="viewUserDetails(${user.id})" title="View Details">
                        <i class="bi bi-eye"></i>
                    </button>
                    <button class="btn btn-outline-primary ms-2" onclick="viewUserTasks(${user.id})" title="View Tasks">
                        <i class="bi bi-list-check"></i>
                    </button>
                </div>
            </td>
        `;
        tbody.appendChild(row);
    });
}

// Get role color for badge
function getRoleColor(role) {
    switch(role) {
        case 'superadmin': return 'danger';
        case 'admin': return 'primary';
        default: return 'secondary';
    }
}

// Format date
function formatDate(dateString) {
    const date = new Date(dateString);
    return date.toLocaleDateString('en-US', {
        year: 'numeric',
        month: 'short',
        day: 'numeric',
        hour: '2-digit',
        minute: '2-digit'
    });
}

// View user details
async function viewUserDetails(userId) {
    try {
        const response = await fetch(`/api/users`);
        const users = await response.json();
        const user = users.find(u => u.id == userId);
        
        if (!user) {
            alert('User not found');
            return;
        }
        
        const modalContent = document.getElementById('userDetailsContent');
        modalContent.innerHTML = `
            <div class="row">
                <div class="col-md-6">
                    <h6>Basic Information</h6>
                    <p><strong>ID:</strong> ${user.id}</p>
                    <p><strong>Name:</strong> ${user.name}</p>
                    <p><strong>Email:</strong> ${user.email}</p>
                    <p><strong>Role:</strong> <span class="badge bg-${getRoleColor(user.role)}">${user.role.toUpperCase()}</span></p>
                </div>
                <div class="col-md-6">
                    <h6>Account Information</h6>
                    <p><strong>Created:</strong> ${formatDate(user.created_at)}</p>
                    <p><strong>Status:</strong> <span class="badge bg-success">Active</span></p>
                </div>
            </div>
        `;
        
        // Show modal
        const modal = new bootstrap.Modal(document.getElementById('userDetailsModal'));
        modal.show();
    } catch (error) {
        console.error('Error loading user details:', error);
        alert('Error loading user details');
    }
}

// View user tasks
async function viewUserTasks(userId) {
    try {
        const response = await fetch(`/api/todos/user/${userId}`);
        if (!response.ok) {
            throw new Error('Failed to fetch user tasks');
        }
        const tasks = await response.json();
        
        let message = `Tasks for User ID ${userId}:\n\n`;
        if (tasks.length === 0) {
            message += 'No tasks assigned.';
        } else {
            tasks.forEach(task => {
                const status = task.completed ? '✅ Completed' : '⏳ Pending';
                const date = formatDate(task.created_at);
                message += `• ${task.title} ${status} (${date})\n`;
            });
        }
        
        alert(message);
    } catch (error) {
        console.error('Error loading user tasks:', error);
        alert('Error loading user tasks: ' + error.message);
    }
}
</script>

<style>
.table th {
    border-top: none;
}

.badge {
    font-size: 0.75em;
}

.btn-group-sm > .btn {
    padding: 0.25rem 0.5rem;
    font-size: 0.875rem;
}

.spinner-border {
    width: 1rem;
    height: 1rem;
}
</style>
